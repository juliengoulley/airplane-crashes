install.packages("caret", dependencies = TRUE)
install.packages("randomForest")
library(caret)
library(randomForest)
setwd("/Users/Julien/Documents/DataScience/Titanic/")
trainSet <- read.table("train.csv", sep = ",", header = TRUE)
testSet <- read.table("test.csv", sep = ",", header = TRUE)
head(trainSet)
head(trainSet)
View(testSet)
View(trainSet)
table(trainSet[,c("Survived", "Pclass")])
table(trainSet[,c("Survived", "Pclass")])
table(trainSet[,c("Survived", "Age")])
table(trainSet[,c("Survived", "Sex")])
library(fields)
install.packages("fields")
library(fields)
bplot.xy(trainSet$Survived, trainSet$Age)
bplot.xy(trainSet$Survived, trainSet$Fare)
getwd()
dirname(parent.frame(2)$ofile)
# For example, here's several helpful packages to load in
dirname(parent.frame(2)$ofile)
parent.frame(2)
parent.frame(2)$ofile
dirname(sys.frame(1)$ofile)
getSrcDirectory()
source("CrashesPerState.r", chdir = TRUE)
# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
# For example, here's several helpful packages to load in
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
setwd("/Users/Julien/Documents/github/airplane-crashes/")
# system("ls ../input")
# Any results you write to the current directory are saved as output.
library(ggplot2)
crash_data = read.csv("3-Airplane_Crashes_Since_1908.txt")
# Create a utility function to get the crash year
extractCrashYear <- function(date) {
date <- as.character(date)
# Get the Year from the date
year = gsub("([0-9]{2})/([0-9]{2})/", "", date)
return(year)
}
# Obtain some new features (focused on US crashes), namely:
# 1. Country in which crash occured
# 2. City in which crash occured
# 3. State in which crash occured
Crash_Year <- NULL
for (i in 1:nrow(crash_data)) {
Crash_Year <- c(Crash_Year, extractCrashYear(crash_data[i,"Date"]))
}
crash_data$Crash_Year <- as.factor(Crash_Year)
# Add the year and factors in the data.
crash_data$Crash_Year <-as.factor(crash_data$Crash_Year)
# Plot the total number of crashes in each state.
ggplot(subset(crash_data,Crash_Year != ""), aes(x = Crash_Year)) +
stat_count(width = 0.5) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
# For example, here's several helpful packages to load in
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
install.packages(c("Rcpp", "readr"))
install.packages(c("Rcpp", "readr"))
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
setwd("/Users/Julien/Documents/github/airplane-crashes/")
# system("ls ../input")
# Any results you write to the current directory are saved as output.
library(ggplot2)
crash_data = read.csv("3-Airplane_Crashes_Since_1908.txt")
# Create a utility function to get the crash year
extractCrashYear <- function(date) {
date <- as.character(date)
crash_data = read.csv("3-Airplane_Crashes_Since_1908.csv")
}
crash_data = read.csv("3-Airplane_Crashes_Since_1908.csv")
# Create a utility function to get the crash year
extractCrashYear <- function(date) {
date <- as.character(date)
# Get the Year from the date
year = gsub("([0-9]{2})/([0-9]{2})/", "", date)
return(year)
}
# Obtain some new features (focused on US crashes), namely:
# 1. Country in which crash occured
# 2. City in which crash occured
# 3. State in which crash occured
Crash_Year <- NULL
for (i in 1:nrow(crash_data)) {
Crash_Year <- c(Crash_Year, extractCrashYear(crash_data[i,"Date"]))
}
crash_data$Crash_Year <- as.factor(Crash_Year)
# Add the year and factors in the data.
crash_data$Crash_Year <-as.factor(crash_data$Crash_Year)
# Plot the total number of crashes in each state.
ggplot(subset(crash_data,Crash_Year != ""), aes(x = Crash_Year)) +
stat_count(width = 0.5) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = Crash_Year)) +
stat_count(width = 0.5) +
+ scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(Crash_Year)) +
stat_count(width = 0.5) +
+ scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
)
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(Crash_Year))) +
stat_count(width = 0.5) +
+ scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(Crash_Year))) +
stat_count(width = 0.5) +
# scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
as.numeric(crash_data$Crash_Year)
crash_data$Crash_Year
as.numeric(as.character(crash_data$Crash_Year))
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
# scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = Crash_Year))) +
stat_count(width = 0.5) +
# scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = Crash_Year)) +
stat_count(width = 0.5) +
# scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
# scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1000,  2000)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=90,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
# Plot the total number of crashes in each state.
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=0,hjust=1,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=0,hjust=0,vjust=0)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=0,hjust=1,vjust=0.25)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
# Plot the total number of crashes in each state.
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=0,hjust=1,vjust=1)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
# Plot the total number of crashes in each state.
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=0,hjust=1,vjust=1)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=0,hjust=0,vjust=1)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=1)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010)) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0.5)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(limits = c(1900,  2010), breaks=c(1:1000)*25) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(breaks=c(1:1000)*25) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(breaks=c(1:1000)*10) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
# For example, here's several helpful packages to load in
install.packages(c("Rcpp", "readr"))
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
setwd("/Users/Julien/Documents/github/airplane-crashes/")
# system("ls ../input")
# Any results you write to the current directory are saved as output.
library(ggplot2)
crash_data = read.csv("3-Airplane_Crashes_Since_1908.csv")
# Create a utility function to get the crash year
extractCrashYear <- function(date) {
date <- as.character(date)
# Get the Year from the date
year = gsub("([0-9]{2})/([0-9]{2})/", "", date)
return(year)
}
# Obtain some new features (focused on US crashes), namely:
# 1. Country in which crash occured
# 2. City in which crash occured
# 3. State in which crash occured
Crash_Year <- NULL
for (i in 1:nrow(crash_data)) {
Crash_Year <- c(Crash_Year, extractCrashYear(crash_data[i,"Date"]))
}
crash_data$Crash_Year <- as.factor(Crash_Year)
# Add the year and factors in the data.
crash_data$Crash_Year <-as.factor(crash_data$Crash_Year)
# Plot the total number of crashes in each year
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(breaks=c(1:1000)*10) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
install.packages(c("Rcpp", "readr"))
install.packages(c("Rcpp", "readr"))
# This R environment comes with all of CRAN preinstalled, as well as many other helpful packages
# The environment is defined by the kaggle/rstats docker image: https://github.com/kaggle/docker-rstats
# For example, here's several helpful packages to load in
install.packages(c("Rcpp", "readr"))
library(ggplot2) # Data visualization
library(readr) # CSV file I/O, e.g. the read_csv function
# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
setwd("/Users/Julien/Documents/github/airplane-crashes/")
# system("ls ../input")
# Any results you write to the current directory are saved as output.
library(ggplot2)
crash_data = read.csv("3-Airplane_Crashes_Since_1908.csv")
# Create a utility function to get the crash year
extractCrashYear <- function(date) {
date <- as.character(date)
# Get the Year from the date
year = gsub("([0-9]{2})/([0-9]{2})/", "", date)
return(year)
}
# Obtain some new features (focused on US crashes), namely:
# 1. Country in which crash occured
# 2. City in which crash occured
# 3. State in which crash occured
Crash_Year <- NULL
for (i in 1:nrow(crash_data)) {
Crash_Year <- c(Crash_Year, extractCrashYear(crash_data[i,"Date"]))
}
crash_data$Crash_Year <- as.factor(Crash_Year)
# Add the year and factors in the data.
crash_data$Crash_Year <-as.factor(crash_data$Crash_Year)
# Plot the total number of crashes in each year
ggplot(subset(crash_data,Crash_Year != ""), aes(x = as.numeric(as.character(Crash_Year)))) +
stat_count(width = 0.5) +
scale_x_continuous(breaks=c(1:1000)*10) +
theme(axis.text.x=element_text(angle=0,hjust=0.5,vjust=0)) +
ggtitle("Crashes per Year") +
xlab("Year") +
ylab("Total Crashes")
install.packages(c("Rcpp", "readr"))
